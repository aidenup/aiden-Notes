import{_ as e,c as a,o as t,a as r}from"./app.e6109b4b.js";const j=JSON.parse('{"title":"前端服务框架","description":"","frontmatter":{},"headers":[{"level":3,"title":"为什么会有服务端渲染","slug":"为什么会有服务端渲染","link":"#为什么会有服务端渲染","children":[]},{"level":3,"title":"现代服务端渲染与古早PHP JSP 模版引擎区别","slug":"现代服务端渲染与古早php-jsp-模版引擎区别","link":"#现代服务端渲染与古早php-jsp-模版引擎区别","children":[]},{"level":3,"title":"Nuxt.js","slug":"nuxt-js","link":"#nuxt-js","children":[]}],"relativePath":"essay/front-endServiceFramework.md","lastUpdated":1675691656000}'),s={name:"essay/front-endServiceFramework.md"},n=r('<h1 id="前端服务框架" tabindex="-1">前端服务框架 <a class="header-anchor" href="#前端服务框架" aria-hidden="true">#</a></h1><p>在不久之前有了解到服务端渲染，在工作中没有使用场景，所以一直没有深入了解，在看过很多技术博客后打算对<code>nextjs</code>、<code>nuxtjs</code>进行调研学习。</p><h3 id="为什么会有服务端渲染" tabindex="-1">为什么会有服务端渲染 <a class="header-anchor" href="#为什么会有服务端渲染" aria-hidden="true">#</a></h3><p>在使用vue.js 或者react 开发单页应用时有一个缺点，就是谷歌不会索引单页应用。</p><p>SPA 是javascript创建的，应用程序的内容是由这种语言动态生成的。这给谷歌带来了一个问题，因为它的<strong>机器人在抓去网站时不能执行javascript</strong>，SPA 页面生成需要执行javascript，这里不能执行js 那么网站内容在机器人面前相当于空的，所以就会索引不到网站的内容</p><p>如果想让网站被索引，解决方案就是使用服务端渲染。那么问题就来了，前端发展到现在，难道不是前后端越来越分离了么，怎么难道又要回到PHP 或者 JSP 的时代吗，这不是越来越倒流了嘛。</p><h3 id="现代服务端渲染与古早php-jsp-模版引擎区别" tabindex="-1">现代服务端渲染与古早PHP JSP 模版引擎区别 <a class="header-anchor" href="#现代服务端渲染与古早php-jsp-模版引擎区别" aria-hidden="true">#</a></h3><p>SSR 不同于纯服务端渲染，SSR 拥有和SPA 一样快速的渲染能力，传统的服务端渲染只有HTML 字符串</p><h3 id="nuxt-js" tabindex="-1">Nuxt.js <a class="header-anchor" href="#nuxt-js" aria-hidden="true">#</a></h3><p>如何让服务端渲染也能够拥有像SAP 一样的渲染速度，这里就使用到了Nuxt.js(我主要使用 vue 开发)</p><p>Nuxt.js 解决了vue 应用利用js实时生成页面的问题，它在服务器端为应用中的每条线路提前生成了HTML页面。这意味着应用中的每一个页面都有一个独特的URL，并且所有的HTML标记都是可见的，当然可以被谷歌的爬虫索引，有利于SEO。</p>',11),d=[n];function i(c,p,o,h,l,_){return t(),a("div",null,d)}const S=e(s,[["render",i]]);export{j as __pageData,S as default};
