import{_ as s,c as n,o as a,a as e}from"./app.18e659c8.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"studyDoc/algorithm/LinkedList/MyLinkedList.md","lastUpdated":1675782313000}'),l={name:"studyDoc/algorithm/LinkedList/MyLinkedList.md"},i=e(`<p>设计链表的实现。您可以选择使用单链表或双链表。单链表中的节点应该具有两个属性：val 和 next。val 是当前节点的值，next 是指向下一个节点的指针/引用。如果要使用双向链表，则还需要一个属性 prev 以指示链表中的上一个节点。假设链表中的所有节点都是 0-index 的。</p><p>在链表类中实现这些功能：</p><p>get(index)：获取链表中第 index 个节点的值。如果索引无效，则返回-1。 addAtHead(val)：在链表的第一个元素之前添加一个值为 val 的节点。插入后，新节点将成为链表的第一个节点。 addAtTail(val)：将值为 val 的节点追加到链表的最后一个元素。 addAtIndex(index,val)：在链表中的第 index 个节点之前添加值为 val  的节点。如果 index 等于链表的长度，则该节点将附加到链表的末尾。如果 index 大于链表长度，则不会插入节点。如果index小于0，则在头部插入节点。 deleteAtIndex(index)：如果索引 index 有效，则删除链表中的第 index 个节点。</p><p>示例：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">MyLinkedList linkedList = new MyLinkedList();</span></span>
<span class="line"><span style="color:#A6ACCD;">linkedList.addAtHead(1);</span></span>
<span class="line"><span style="color:#A6ACCD;">linkedList.addAtTail(3);</span></span>
<span class="line"><span style="color:#A6ACCD;">linkedList.addAtIndex(1,2);   //链表变为1-&gt; 2-&gt; 3</span></span>
<span class="line"><span style="color:#A6ACCD;">linkedList.get(1);            //返回2</span></span>
<span class="line"><span style="color:#A6ACCD;">linkedList.deleteAtIndex(1);  //现在链表是1-&gt; 3</span></span>
<span class="line"><span style="color:#A6ACCD;">linkedList.get(1);            //返回3</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-XcNbp" id="tab-tP0WAqp" checked="checked"><label for="tab-tP0WAqp">javascript</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div>`,6),t=[i];function p(d,c,r,o,b,u){return a(),n("div",null,t)}const m=s(l,[["render",p]]);export{v as __pageData,m as default};
